ТЗ


Проект: ToDo Manager с категориями и синхронизацией
Цель
Сделать приложение для управления задачами, которое затронет:

работу с состоянием (локальным и глобальным)

хуки (встроенные + кастомные)

контекст и менеджеры состояния (Zustand/Context)

взаимодействие с API (CRUD + optimistic updates)

маршрутизацию (React Router)

мемоизацию и оптимизацию рендеринга

асинхронные паттерны (React Query / SWR)

формочки (react-hook-form)

обработку ошибок и Edge cases

Server Components (если решишь делать на Next.js)

Функционал
1. Задачи
Создание, редактирование, удаление задач.

Поля: title, description, dueDate, priority, status (done/pending).

Фильтрация/сортировка (по дате, приоритету).

Чекбокс для отметки выполненных задач.

2. Категории
Категории с CRUD (например, Work / Personal).

Задачи привязываются к категории.

Страница категории показывает только её задачи.

3. Авторизация (фейковая)
Простая форма логина (email + пароль).

Хранение токена в localStorage.

После логина показывается список задач.

Выход из системы (logout).

4. Синхронизация
Подключение к фейковому API (JSON-server или mock API).

React Query для запросов, кэширования и optimistic updates.

5. Глобальное состояние
Глобальное состояние для пользователя и настроек (Zustand или Context).

Локальное состояние — через useState/useReducer.

6. Маршруты
/login — страница входа

/tasks — все задачи

/tasks/:id — детальная страница задачи

/categories — список категорий

7. UI
Использовать готовую UI-библиотеку (например, Shadcn UI или Material UI).

Минимум кастомных стилей, упор на логику.

